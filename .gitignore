# Created by .ignore support plugin (hsz.mobi)

/output/*
# except for .gitkeep
!/output/.gitkeep

# IntelliJ project files
.idea
*.iml
out
gen
### Python template
# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
pip-wheel-metadata/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
cover/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
.pybuilder/
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
# .python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# PEP 582; used by e.g. github.com/David-OConnor/pyflow
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# Cython debug symbols
cython_debug/

module/BaseBlocks.py
utils/tensor_ops.py
backbone/ResNet.py
backbone/VGG.py
backbone/__init__.py
loss/HEL.py
loss/MyMSELoss.py
loss/__init__.py
train.py
module/ASPP.py
module/CA.py
module/CARAFE.py
module/DC.py
module/MyModules.py
module/DeformableConv.py
module/DenseFuse.py
module/DepthGuidedMSM.py
module/MyModules.py
module/DynamicConv.py
module/FRNLayer.py
module/FusionModule.py
module/ICCVDCM.py
module/OctLikeConv.py
module/PPM.py
module/ResDDPM.py
module/SEModule.py
module/__init__.py
network_old/FinalModel.py
network_old/ForDecoder.py
network_old/ForEncoder.py
network_old/ForTotal.py
network_old/ForTotalV1.py
network_old/HDFNet.py
network_old/MoreSimple.py
network_old/SingleModel.py
network_old/TDNet.py
network_old/TSDC.py
network_old/TestDCModule.py
network_old/TestThought.py
network_old/ToTalNet.py
network_old/VGG16FCN.py
network_old/VGG19_TDNet.py
network_old/__init__.py
readme.md
simple_main.py
utils/__init__.py
utils/cal_fps.py
config.py
utils/convert_full2state.py
utils/gpu_mem_track.py
utils/data/__init__.py
utils/data/create_datasets_imgs_semi.py
utils/data/create_loader_imgs.py
utils/data/create_rgb_datasets_imgs.py
utils/data/create_rgbd_datasets_imgs.py
utils/transforms/joint_transforms.py
utils/lmdb/
utils/misc.py
utils/saliency_metric.py
utils/test_crf_depth.py
utils/test_excel.py
utils/transforms/triple_transforms.py
output/
